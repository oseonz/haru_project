plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.study.spring'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

bootWar {
    archiveFileName = 'haruback.war' // WAR 파일 이름
    archiveFileName = 'test.war'
	archiveVersion = "0.0.0"
}

bootWar.enabled = true
war.enabled = false

tasks.named('test') {
	useJUnitPlatform()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
     providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat' // 내장 톰캣을 provided로 변경

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // for JSON serialization
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Image processing dependencies
    implementation 'org.apache.commons:commons-imaging:1.0-alpha3'
    implementation 'net.coobird:thumbnailator:0.4.20'
    implementation 'com.google.code.gson:gson:2.10.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters']
}